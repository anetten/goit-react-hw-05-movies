{"version":3,"file":"static/js/7.0bbfad61.chunk.js","mappings":"6NA6CA,UAzCoB,WAClB,IAAAA,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAA0CL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAChCG,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEcC,EAAAA,EAAAA,IAAgBjB,GAAY,KAAD,EAApDa,EAAgBC,EAAAI,KACtBb,EAAiBQ,GAAkBC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEnCM,QAAQC,MAAM,iCAAgCP,EAAAK,IAAS,yBAAAL,EAAAQ,OAAA,GAAAV,EAAA,kBAE1D,kBAPiB,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KASlB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,MAAO7B,EACP8B,SAAU,SAAAC,GAAC,OAAI9B,EAAc8B,EAAEC,OAAOH,MAAM,KAE9CF,EAAAA,EAAAA,KAAA,UAAQM,QAASzB,EAAakB,SAAC,WAE9BtB,GACCuB,EAAAA,EAAAA,KAAA,MAAAD,SACGtB,EAAc8B,QAAQC,KAAI,SAAAC,GAAK,OAC9BT,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,MAAO,CAAEC,KAAMjC,GAAYkC,GAAE,WAAAC,OAAaL,EAAMM,IAAKhB,SACxDU,EAAMO,SAFFP,EAAMM,GAIV,OAITf,EAAAA,EAAAA,KAAA,KAAAD,SAAG,6BAIX,C","sources":["components/pages/Movies.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { getsearchMovies } from 'movieAPI';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst SearchMovie = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState(null);\n  const location = useLocation();\n\n  const handleSearch = async () => {\n    try {\n      const searchResultData = await getsearchMovies(searchTerm);\n      setSearchResults(searchResultData);\n    } catch (error) {\n      console.error('Error fetching search results:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h3>Search Movies</h3>\n      <input\n        type=\"text\"\n        value={searchTerm}\n        onChange={e => setSearchTerm(e.target.value)}\n      />\n      <button onClick={handleSearch}>Search</button>\n\n      {searchResults ? (\n        <ul>\n          {searchResults.results.map(movie => (\n            <li key={movie.id}>\n              <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No search results yet.</p>\n      )}\n    </div>\n  );\n};\n\nexport default SearchMovie;\n"],"names":["_useState","useState","_useState2","_slicedToArray","searchTerm","setSearchTerm","_useState3","_useState4","searchResults","setSearchResults","location","useLocation","handleSearch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","searchResultData","_context","prev","next","getsearchMovies","sent","t0","console","error","stop","apply","arguments","_jsxs","children","_jsx","type","value","onChange","e","target","onClick","results","map","movie","Link","state","from","to","concat","id","title"],"sourceRoot":""}